\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {table}{\numberline {2.1}{\ignorespaces Nondeterminism profile of ``Hello, world!'' program (ASLR disabled)\relax }}{30}
\contentsline {table}{\numberline {2.2}{\ignorespaces Nondeterminism profile of Linux services and daemons (ASLR disabled). \newline The average reported here is weighted-average computed based on the number of instructions executed by each program. The period over which the programs were profiled was selected to be representative of their execution typically till the login screen is shown. Typically, the programs ran for 3-5 {\em true} (i.e without instrumentation overhead) minutes.\relax }}{33}
\contentsline {table}{\numberline {2.3}{\ignorespaces Measuring burstiness of nondeterminism in Linux services. \newline The table shows the maximum number of consecutive instructions that conflict in their side-effects or control-flow as a fraction of the total instructions of a program. These numbers are only a small fraction of the 12\% conflicting instructions in a program (see Table 2.2\hbox {}), which establishes that execution differences are short-lived in our sample programs.\relax }}{37}
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {table}{\numberline {4.1}{\ignorespaces \hspace {0.2in}Preliminary Results from Modeling Precise Silhouetting.\newline $A$, the advantage ratio is calculated by ${\begingroup T_O\endgroup \over T_S}$. $T_O$ is the total instructions that would be executed in the status quo whereas $T_S$ is the total instructions that would be executed under precise silhouetting. $\mathaccent "017E\relax K$ (not shown in the table), represents overhead constants and was selected conservatively to be $(20,1000,20)$. $M$ is the number of system calls and memory operations made by the leader before the first active fork-point; $F$ is the number of latent fork-points before the first active fork-point. $p = 100P/I$ is the prefix ratio of the execution. \relax }}{70}
\contentsline {table}{\numberline {4.2}{\ignorespaces Preliminary Results for Optimistic Silhouetting (Excluding Control Flow). \newline $A$, the advantage ratio is calculated by ${\begingroup T_O\endgroup \over T_S}$. The variables $T_O$, $T_S$, $M$, $F$ are the same as before (see Table 4.1\hbox {}). $d = 100D/I$ is the portion of the execution before the first control-flow divergence. \relax }}{71}
\contentsline {table}{\numberline {4.3}{\ignorespaces Preliminary Results for Optimistic Silhouetting (Including Control Flow). \newline We exclude \texttt {acpid} because it had no control flow differences. $A$, the advantage ratio is calculated by ${\begingroup T_O\endgroup \over T_S}$. The variables $T_O$, $T_S$, $M$, $F$ are the same as before (see Table 4.2\hbox {}). $d = D/I$ is the portion of the execution before the first control-flow divergence. $C$ and $L_C$ represent the number of control-flow divergences and their average length respectively. $d = 100D/I$ the portion of the execution before permanent execution divergence. \relax }}{72}
\contentsline {table}{\numberline {4.4}{\ignorespaces Improvements in $A$ for Linux services for $N = 1000$ ($N$ is the number of concurrent instances) and $\mathaccent "017E\relax K$, chosen conservatively, $ = (20, 1000, 20, 40, 1000)$.\relax }}{84}
\contentsline {table}{\numberline {4.5}{\ignorespaces Improvements in $A$ for Linux services for $N = 1000$ ($N$ is the number of concurrent instances) and $\mathaccent "017E\relax K$, chosen moderately conservatively, $ = (10, 100, 5, 20, 50)$.\relax }}{84}
\addvspace {10\p@ }
